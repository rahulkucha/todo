{
  "swagger": "2.0",
  "info": {
    "description": "This is simple todo app where you can create/read/update/delete your tasks and todos",
    "version": "1.0.0",
    "title": "Todo app",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "petstore.swagger.io",
  "basePath": "/v12",
  "tags": [
    {
      "name": "users",
      "description": "Operations about user"
    },
    {
      "name": "tasks",
      "description": "Operations about task"
    },
    {
      "name": "todos",
      "description": "Operations about todo"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/user/register": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "New user must register first",
        "description": "New user should not be able to register with same emailId by which some other user has already registered",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "multipart/form-data"
        ],
        "produces": [
          "text"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User details which need to be stored",
            "required": true,
          }
        ],
        "responses": {
          "200": {
            "description": "Registration Successfull !!!"
          },
          "404": {
            "description": "Validation exception"
          },
          "405": {
            "description": "Invalid email !!!"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "User Login",
        "description": "Only registered/active user must be able to login",
        "operationId": "email/password",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "user must enter valid email & password to login",
            "required": true,
          }
        ],
        "responses": {
          "200": {
            "description": "JWT token"
          },
          "400": {
            "description": "Un-registered user,Invalid-Email,In-active user"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/user/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add new user by admin",
        "description": "Only admin is allowed to add new users",
        "operationId": "is_admin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User details which need to be stored",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "New user added successfully by admin"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "users"
        ],
        "summary": "view user details",
        "description": "view users based on is_admin",
        "operationId": "is_admins",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "listing of all the users"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete a user",
        "description": "",
        "operationId": "_id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "body",
            "description": "user id to delete",
            "required": true,
          }
        ],
        "responses": {
          "200": {
            "description": "list of users"
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Updated user",
        "description": "This can only be done by the logged in user.",
        "operationId": "username",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
    },
    "/task/": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Add new task",
        "description": "New task",
        "operationId": "user_id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User details which need to be stored",
            "required": true,
          }
        ],
        "responses": {
          "200": {
            "description": "New user added successfully by admin"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "view user details",
        "description": "view users based on is_admin",
        "operationId": "is_admins",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "listing of all the users"
          }
        }
      },
      "delete": {
        "tags": [
          "tasks"
        ],
        "summary": "Delete a user",
        "description": "",
        "operationId": "_id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "body",
            "description": "user id to delete",
            "required": true,
          }
        ],
        "responses": {
          "200": {
            "description": "list of users"
          }
        }
      },
      "put": {
        "tags": [
          "tasks"
        ],
        "summary": "Updated user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/todo/": {
      "post": {
        "tags": [
          "todos"
        ],
        "summary": "Add new task",
        "description": "New task",
        "operationId": "user_id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User details which need to be stored",
            "required": true,
          }
        ],
        "responses": {
          "200": {
            "description": "New user added successfully by admin"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "todos"
        ],
        "summary": "view user details",
        "description": "view users based on is_admin",
        "operationId": "is_admins",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "listing of all the users"
          }
        }
      },
      "delete": {
        "tags": [
          "todos"
        ],
        "summary": "Delete a user",
        "description": "",
        "operationId": "_id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "body",
            "description": "user id to delete",
            "required": true,
          }
        ],
        "responses": {
          "200": {
            "description": "list of users"
          }
        }
      },
      "put": {
        "tags": [
          "todos"
        ],
        "summary": "Updated user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  }
}